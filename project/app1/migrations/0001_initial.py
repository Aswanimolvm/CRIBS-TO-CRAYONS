# Generated by Django 3.2.24 on 2024-04-02 08:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoginUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.CharField(blank=True, choices=[('APPROVE', 'APPROVE'), ('REJECT', 'REJECT'), ('PENDING', 'PENDING')], default='PENDING', max_length=20, null=True)),
                ('user_type', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Baby_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baby_name', models.CharField(max_length=20)),
                ('father_name', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=20, null=True)),
                ('weight', models.IntegerField()),
                ('birth_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_name', models.CharField(max_length=20)),
                ('Address', models.CharField(max_length=50)),
                ('Email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('login_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(max_length=20)),
                ('Address', models.CharField(max_length=50)),
                ('Email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('licence_proof', models.FileField(upload_to='licence')),
                ('login_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=30)),
                ('price', models.IntegerField()),
                ('product_details', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=30)),
                ('image1', models.FileField(upload_to='product')),
                ('image2', models.FileField(upload_to='product')),
                ('image3', models.FileField(upload_to='product')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('discription', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_date', models.DateField(auto_now=True)),
                ('video', models.FileField(upload_to='videos')),
                ('hospital_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Vaccination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Vaccination_name', models.CharField(blank=True, max_length=100, null=True)),
                ('Dose', models.IntegerField(blank=True, null=True)),
                ('Age', models.IntegerField(blank=True, null=True)),
                ('hospital_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_name', models.CharField(max_length=20)),
                ('Address', models.CharField(max_length=50)),
                ('Email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('login_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Productbooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('status', models.CharField(default='pending', max_length=15)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.customer')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='seller_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.seller'),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_name', models.CharField(max_length=20)),
                ('Address', models.CharField(max_length=50)),
                ('Email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('blood_group', models.CharField(max_length=10)),
                ('baby_status', models.CharField(blank=True, max_length=50, null=True)),
                ('hospital_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hospital')),
                ('login_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Nutritionist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nutritionist_name', models.CharField(max_length=20)),
                ('consulting_days', models.CharField(max_length=100)),
                ('consulting_time', models.CharField(max_length=100)),
                ('hospital_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hospital')),
                ('login_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(auto_now=True)),
                ('Parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.parent')),
                ('hospital_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Doctor_name', models.CharField(max_length=20)),
                ('qualification', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=20)),
                ('consulting_days', models.CharField(max_length=30)),
                ('slots', models.IntegerField()),
                ('availability_status', models.CharField(default='AVAILABLE', max_length=10)),
                ('hospital_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.customer')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.product')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateTimeField(auto_now=True)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.doctor')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.parent')),
            ],
        ),
        migrations.CreateModel(
            name='Baby_vaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccination_status', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('baby_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.baby_details')),
                ('vaccination_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.vaccination')),
            ],
        ),
        migrations.AddField(
            model_name='baby_details',
            name='hospital_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.hospital'),
        ),
        migrations.AddField(
            model_name='baby_details',
            name='parent_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.parent'),
        ),
    ]
